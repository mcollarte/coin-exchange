{"version":3,"sources":["Components/Coin.js","Components/CoinList.js","Components/AccountBalance.js","Components/logo.svg","Components/ExchangeHeader.js","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","showBalance","balance","price","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","value","key","Section","section","AccountBalance","amount","handleShowBalance","Header","header","H1","h1","Img","img","ExchangeHeader","className","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","coins","coinIds","data","slice","coin","id","coinPromises","Promise","all","coinInfo","coinList","response","symbol","quotes","USD","useEffect","length","changedKeyValue","newCoinInfo","newCoinPrices","values","balanceDisplay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b04b8168.chunk.js","sourcesContent":["//type rcc to setup the code for the component\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    const handleClick= (event)=>{\r\n        //Prevent the page from reloading because this will remount component and reset initial values\r\n        event.preventDefault();\r\n        props.handleRefresh(props.tickerId);\r\n    }\r\n    return (\r\n\r\n            <tr>\r\n                <Td>{props.name}</Td>\r\n                <Td>{props.ticker}</Td>\r\n                {props.showBalance ? <Td>{props.balance}</Td>:<></>}\r\n                <Td>${props.price}</Td>\r\n                <Td>\r\n                    <form action=\"#\" method=\"POST\">\r\n                        <button onClick ={handleClick}>Refresh</button>\r\n                    </form>\r\n                </Td>\r\n            </tr>                 \r\n        )\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n};","import React from 'react';\r\nimport Coin from './Coin.js';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    align-content:  center;\r\n    display: inline-block;\r\n    font: 2rem;\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n\r\n  return (\r\n            <Table >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                {props.showBalance?<th>Balance</th>: <></>}\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody >\r\n              {/* This is a JS function called map which simplifies rendering components as a list */}\r\n              {props.coinData.map(value => \r\n                <Coin key={value.key}\r\n                      tickerId = {value.key}\r\n                      name={value.name} \r\n                      ticker = {value.ticker} \r\n                      balance = {value.balance} \r\n                      price={value.price} \r\n                      handleRefresh = {props.handleRefresh}\r\n                      showBalance = {props.showBalance}/>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    text-align: left;\r\n    padding: 1.5rem 0rem 0rem 5rem;\r\n    font-size: 2rem;\r\n`;\r\n\r\n\r\nexport default function AccountBalance(props){\r\n        return (\r\n                <Section>\r\n                    {props.showBalance? <>Account Balance:{props.amount}</>:<></>}\r\n                    <button onClick={props.handleShowBalance}> {props.showBalance?'Hide Balance' : 'Show Balance'} </button>               \r\n                </Section>\r\n            );       \r\n                \r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  background-color: #282c34;\r\n  min-height: 20vh;\r\n  display: flex;\r\n  flex-direction: row; /* puts div and image in the same row*/\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n`;\r\nconst H1 = styled.h1`\r\n  font-size: 6rem;\r\n`;\r\nconst Img = styled.img`\r\n  height: 8rem;\r\n  pointer-events: none;\r\n`;\r\n\r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header className=\"App-header\">\r\n            <Img src={logo} alt=\"React Logo\"  />\r\n            <H1 className =\"App-header\">\r\n              Coin Exchange\r\n            </H1>\r\n          </Header>\r\n        )\r\n    }\r\n}\r\n","import React, {useState , useEffect} from 'react';\nimport CoinList from './Components/CoinList.js';\nimport AccountBalance from './Components/AccountBalance.js'\nimport ExchangeHeader from './Components/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Div = styled.div`\ntext-align: center;\nbackground-color: #26067e;\ncolor: #cccccc;\n`;\n\n//Define # of coins to be displayed\nconst COIN_NUMBER = 10;\n//utility function\nconst formatPrice = (price) => parseFloat(Number(price).toFixed(4));\n\nfunction App (props) {\n\n  const [balance, setBalance] = useState(100000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async() =>{\n    const coins = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = coins.data.slice(0,COIN_NUMBER).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const coinPromises = coinIds.map( id => axios.get(tickerUrl+id));\n    const coinInfo = await Promise.all(coinPromises);\n    let coinList = coinInfo.map(response=>{\n        const coin = response.data;\n        return{\n          key: coin.id,\n          name: coin.name,\n          ticker: coin.symbol,\n          balance: 0,\n          price: formatPrice(coin.quotes.USD.price)\n        };\n      });    \n      setCoinData(coinList);\n  }\n\n  //the useEffect function will run every time our component mounts or is updated therefore\n  //we need to write our code inside it to recognize each situation\n  useEffect( () =>{\n    if(coinData.length ===0)\n      componentDidMount();\n\n  })\n\n  \n\n  const handleRefresh = async (changedKeyValue) =>{\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const coinInfo = await axios.get(tickerUrl+changedKeyValue);\n    const newCoinInfo= formatPrice(coinInfo.data.quotes.USD.price);\n    const newCoinPrices = coinData.map((values) => {\n      if(values.key === changedKeyValue){\n            values.price = newCoinInfo;\n      } \n      return values; \n    });\n    setCoinData( newCoinPrices);\n  }\n\n  const handleShowBalance = (balanceDisplay) =>{\n    setShowBalance(!showBalance);\n  }\n\n  return (\n    <Div>\n      <ExchangeHeader />\n      <AccountBalance \n          amount={balance} \n          showBalance ={showBalance} \n          handleShowBalance = {handleShowBalance}/>\n      <CoinList \n          coinData={coinData} \n          showBalance = {showBalance} \n          handleRefresh={handleRefresh} />\n    </Div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}